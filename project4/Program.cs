using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using static System.Net.Mime.MediaTypeNames;

namespace project4
{

    internal class Program
    {
        static void Main(string[] args)
        {
            string userPassword = " ", userLogin = " ";
            string inputPassword = " ", inputLogin = " ";
            bool isOpen = true;
            while (isOpen)
            {
                TextColor("1. Регистрация. ", ConsoleColor.Green);
                TextColor("2. Авторизация. ", ConsoleColor.Green);
                TextColor("3. Выход. ", ConsoleColor.Red);
                switch (Convert.ToInt32(Console.ReadLine()))
                {
                    case 1:
                        Registration(ref userLogin, ref userPassword);
                        break;

                    case 2:
                        LoginAndPasswordValidityCheck(ref userLogin, ref userPassword, ref inputLogin, ref inputPassword, ref isOpen);
                        break;
                    case 3:
                        Console.Clear();
                        isOpen = false;
                        break;
                }
                Console.Clear();
            }
        }
        static void Registration(ref string userLogin, ref string userPassword)
        {
            bool trueOpen = true;
            Console.Clear();
            Console.WriteLine("\t\t\t\tДобро пожаловать, в окно регистрации");
            while (trueOpen)
            {
                Console.Write("Введите ваш логин: ");
                userLogin = Console.ReadLine();
                Console.Write("Введите ваш пароль: ");
                userPassword = Console.ReadLine();
                if (string.IsNullOrEmpty(userLogin) || string.IsNullOrEmpty(userPassword))
                {
                    TextColor("Введите корректное значение, а не пустоту!", ConsoleColor.Red);
                    trueOpen = true;
                }
                else
                {
                    trueOpen = false;
                    Console.Clear();
                    Console.WriteLine("Спасибо за регистрацию! Нажмите Enter чтобы продолжить. ");
                    Console.ReadKey();
                }
            }
        }
        static void TextColor(string text, ConsoleColor color)
        {
            Console.ForegroundColor = color;
            Console.WriteLine(text);
            Console.ForegroundColor = ConsoleColor.White;
        }
        static void LoginAndPasswordValidityCheck(ref string userLogin, ref string userPassword, ref string inputPassword, ref string inputLogin, ref bool isOpen)
        {
            bool isOpenFirstLevel = true;
            bool isOpenSecondLevel = false;
            bool isOpenThirdLevel = false;
            bool isOpenFourthLevel = false;
            bool isOpenFiveLevel = false;
            int userMoney = 0;
            int userCounterItems = 0;
            int userCounterPotions = 0;
            int userCounterRareItems = 0;
            int counter = 5;
            Console.Clear();
            Console.WriteLine("\t\t\t\tДобро пожаловать, в окно авторизации");
            for (int i = 0; i < counter; ++i)
            {
                Console.Write("Введите ваш логин: ");
                inputLogin = Console.ReadLine();
                Console.Write("Введите ваш пароль: ");
                inputPassword = Console.ReadLine();
                if (inputLogin == userLogin && inputPassword == userPassword)
                {
                    Console.Clear();
                    TextColor("Добро пожаловать в Игру! Нажмите Enter, чтобы продолжить.", ConsoleColor.Green);
                    Console.ReadKey();
                    Console.Clear();
                    MenuOfGame(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                }
                else
                {
                    Console.WriteLine($"Логин или пароль неправильны, попробуйте сново. Оставшиеся попытки: {counter - i - 1}");
                    Console.ReadKey();
                    Console.Clear();
                    Console.WriteLine("\t\t\t\tДобро пожаловать, в окно авторизации");
                }
                if (counter - i - 1 == 0)
                {
                    Console.Clear();
                    TextColor("Увы... Неправильно. Нажмите Enter чтобы продолжить. ", ConsoleColor.Red);
                    isOpen = false;
                    Console.ReadKey();
                    Console.Clear();
                }
            }
        }
        static void Game(ref bool isOpen, ref bool isOpenFirstLevel, ref bool isOpenSecondLevel, ref bool isOpenThirdLevel, ref bool isOpenFourthLevel, ref bool isOpenFiveLevel, ref int userMoney, ref int userCounterItems, ref int userCounterPotions, ref int userCounterRareItems)
        {
            while (isOpen)
            {
                Console.WriteLine("1. Первый Уровень.");
                Console.WriteLine("2. Второй уровень.");
                Console.WriteLine("3. Третий уровень.");
                Console.WriteLine("4. Четвертый уровень.");
                Console.WriteLine("5. Пятый уровень.");
                Console.WriteLine("6. Назад.");
                Console.CursorVisible = true;
                switch (Convert.ToInt32(Console.ReadLine()))
                {
                    case 1:

                        Console.Clear();
                        Console.CursorVisible = false;
                        if (isOpenFirstLevel)
                        {
                            int collectedX = 0;
                            char[,] map =
                                {
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X','#'},
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                                };
                            int userX = 1, userY = 1;
                            char[] bag = new char[1];
                            while (true)
                            {
                                Console.SetCursorPosition(0, 20);
                                Console.Write("Сумка: ");
                                for (int i = 0; i < bag.Length; i++)
                                {
                                    Console.Write(bag[i] + " ");
                                }
                                Console.SetCursorPosition(0, 21);
                                Console.Write("Количество валюты: " + userMoney);
                                Console.SetCursorPosition(0, 22);
                                Console.Write("Количество предметов: " + userCounterItems);
                                Console.SetCursorPosition(0, 23);
                                Console.Write("Количество зельи: " + userCounterPotions);
                                Console.SetCursorPosition(0, 24);
                                Console.Write("Количество уникальных предметов: " + userCounterRareItems);
                                Console.SetCursorPosition(0, 0);
                                for (int i = 0; i < map.GetLength(0); i++)
                                {
                                    for (int j = 0; j < map.GetLength(1); j++)
                                    {
                                        Console.Write(map[i, j]);
                                    }
                                    Console.WriteLine();
                                }
                                Console.SetCursorPosition(userY, userX);
                                Console.Write('@');
                                ConsoleKeyInfo charKey = Console.ReadKey();
                                switch (charKey.Key)
                                {
                                    case ConsoleKey.UpArrow:
                                        if (map[userX - 1, userY] != '#')
                                        {
                                            userX--;
                                        }
                                        break;
                                    case ConsoleKey.DownArrow:
                                        if (map[userX + 1, userY] != '#')
                                        {
                                            userX++;
                                        }
                                        break;
                                    case ConsoleKey.LeftArrow:
                                        if (map[userX, userY - 1] != '#')
                                        {
                                            userY--;
                                        }
                                        break;
                                    case ConsoleKey.RightArrow:
                                        if (map[userX, userY + 1] != '#')
                                        {
                                            userY++;
                                        }
                                        break;
                                }
                                if (map[userX, userY] == 'X')
                                {
                                    ++userMoney;
                                }
                                if (map[userX, userY] == 'X')
                                {
                                    map[userX, userY] = ' ';
                                    char[] tempBag = new char[bag.Length + 1];
                                    for (int i = 0; i < bag.Length; i++)
                                    {
                                        tempBag[i] = bag[i];
                                    }
                                    tempBag[tempBag.Length - 1] = 'X';
                                    bag = tempBag;
                                    collectedX++;
                                }
                                Console.Clear();
                                if (collectedX == 3)
                                {
                                    Console.Clear();
                                    TextColor("Поздравляю! Уровень пройден!", ConsoleColor.Green);
                                    isOpenSecondLevel = true;
                                    Console.ReadKey();
                                    Console.Clear();
                                    Game(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);

                                }
                            }
                        }
                        else
                        {
                            TextColor("Уровень не доступен, пройдите предыдущий.", ConsoleColor.Red);
                        }
                        break;
                    case 2:
                        Console.Clear();
                        Console.CursorVisible = false;
                        if (isOpenSecondLevel)
                        {
                            int collectedX = 0;
                            char[,] map =
                                {
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#','#','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X','#'},
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                                };
                            int userX = 1, userY = 1;
                            char[] bag = new char[1];
                            while (true)
                            {
                                Console.SetCursorPosition(0, 20);
                                Console.Write("Сумка: ");
                                for (int i = 0; i < bag.Length; i++)
                                {
                                    Console.Write(bag[i] + " ");
                                }
                                Console.SetCursorPosition(0, 21);
                                Console.Write("Количество валюты: " + userMoney);
                                Console.SetCursorPosition(0, 22);
                                Console.Write("Количество предметов: " + userCounterItems);
                                Console.SetCursorPosition(0, 23);
                                Console.Write("Количество зельи: " + userCounterPotions);
                                Console.SetCursorPosition(0, 24);
                                Console.Write("Количество уникальных предметов: " + userCounterRareItems);
                                Console.SetCursorPosition(0, 0);
                                for (int i = 0; i < map.GetLength(0); i++)
                                {
                                    for (int j = 0; j < map.GetLength(1); j++)
                                    {
                                        Console.Write(map[i, j]);
                                    }
                                    Console.WriteLine();
                                }
                                Console.SetCursorPosition(userY, userX);
                                Console.Write('@');
                                ConsoleKeyInfo charKey = Console.ReadKey();
                                switch (charKey.Key)
                                {
                                    case ConsoleKey.UpArrow:
                                        if (map[userX - 1, userY] != '#')
                                        {
                                            userX--;
                                        }
                                        break;
                                    case ConsoleKey.DownArrow:
                                        if (map[userX + 1, userY] != '#')
                                        {
                                            userX++;
                                        }
                                        break;
                                    case ConsoleKey.LeftArrow:
                                        if (map[userX, userY - 1] != '#')
                                        {
                                            userY--;
                                        }
                                        break;
                                    case ConsoleKey.RightArrow:
                                        if (map[userX, userY + 1] != '#')
                                        {
                                            userY++;
                                        }
                                        break;
                                }
                                if (map[userX, userY] == 'X')
                                {
                                    ++userMoney;
                                }
                                if (map[userX, userY] == 'X')
                                {
                                    map[userX, userY] = ' ';
                                    char[] tempBag = new char[bag.Length + 1];
                                    for (int i = 0; i < bag.Length; i++)
                                    {
                                        tempBag[i] = bag[i];
                                    }
                                    tempBag[tempBag.Length - 1] = 'X';
                                    bag = tempBag;
                                    collectedX++;
                                }
                                Console.Clear();
                                if (collectedX == 3)
                                {
                                    Console.Clear();
                                    TextColor("Поздравляю! Уровень пройден!", ConsoleColor.Green);
                                    isOpenThirdLevel = true;
                                    Console.ReadKey();
                                    Console.Clear();
                                    Game(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                                }
                            }
                        }
                        else
                        {
                            TextColor("Уровень не доступен, пройдите предыдущий.", ConsoleColor.Red);
                        }
                        break;
                    case 3:
                        Console.Clear();
                        Console.CursorVisible = false;
                        if (isOpenThirdLevel)
                        {
                            int collectedX = 0;
                            char[,] map =
                                {
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X','#'},
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                                };
                            int userX = 1, userY = 1;
                            char[] bag = new char[1];
                            while (true)
                            {
                                Console.SetCursorPosition(0, 20);
                                Console.Write("Сумка: ");
                                for (int i = 0; i < bag.Length; i++)
                                {
                                    Console.Write(bag[i] + " ");
                                }
                                Console.SetCursorPosition(0, 21);
                                Console.Write("Количество валюты: " + userMoney);
                                Console.SetCursorPosition(0, 22);
                                Console.Write("Количество предметов: " + userCounterItems);
                                Console.SetCursorPosition(0, 23);
                                Console.Write("Количество зельи: " + userCounterPotions);
                                Console.SetCursorPosition(0, 24);
                                Console.Write("Количество уникальных предметов: " + userCounterRareItems);
                                Console.SetCursorPosition(0, 0);
                                for (int i = 0; i < map.GetLength(0); i++)
                                {
                                    for (int j = 0; j < map.GetLength(1); j++)
                                    {
                                        Console.Write(map[i, j]);
                                    }
                                    Console.WriteLine();
                                }
                                Console.SetCursorPosition(userY, userX);
                                Console.Write('@');
                                ConsoleKeyInfo charKey = Console.ReadKey();
                                switch (charKey.Key)
                                {
                                    case ConsoleKey.UpArrow:
                                        if (map[userX - 1, userY] != '#')
                                        {
                                            userX--;
                                        }
                                        break;
                                    case ConsoleKey.DownArrow:
                                        if (map[userX + 1, userY] != '#')
                                        {
                                            userX++;
                                        }
                                        break;
                                    case ConsoleKey.LeftArrow:
                                        if (map[userX, userY - 1] != '#')
                                        {
                                            userY--;
                                        }
                                        break;
                                    case ConsoleKey.RightArrow:
                                        if (map[userX, userY + 1] != '#')
                                        {
                                            userY++;
                                        }
                                        break;
                                }
                                if (map[userX, userY] == 'X')
                                {
                                    ++userMoney;
                                }
                                if (map[userX, userY] == 'X')
                                {
                                    map[userX, userY] = ' ';
                                    char[] tempBag = new char[bag.Length + 1];
                                    for (int i = 0; i < bag.Length; i++)
                                    {
                                        tempBag[i] = bag[i];
                                    }
                                    tempBag[tempBag.Length - 1] = 'X';
                                    bag = tempBag;
                                    collectedX++;
                                }
                                Console.Clear();
                                if (collectedX == 3)
                                {
                                    Console.Clear();
                                    TextColor("Поздравляю! Уровень пройден!", ConsoleColor.Green);
                                    isOpenFourthLevel = true;
                                    Console.ReadKey();
                                    Console.Clear();
                                    Game(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                                }
                            }
                        }
                        else
                        {
                            TextColor("Уровень не доступен, пройдите предыдущий.", ConsoleColor.Red);
                        }
                        break;
                    case 4:
                        Console.Clear();
                        Console.CursorVisible = false;
                        if (isOpenFourthLevel)
                        {
                            int collectedX = 0;
                            char[,] map =
                                {
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X','#'},
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                                };
                            int userX = 1, userY = 1;
                            char[] bag = new char[1];
                            while (true)
                            {
                                Console.SetCursorPosition(0, 20);
                                Console.Write("Сумка: ");
                                for (int i = 0; i < bag.Length; i++)
                                {
                                    Console.Write(bag[i] + " ");
                                }
                                Console.SetCursorPosition(0, 21);
                                Console.Write("Количество валюты: " + userMoney);
                                Console.SetCursorPosition(0, 22);
                                Console.Write("Количество предметов: " + userCounterItems);
                                Console.SetCursorPosition(0, 23);
                                Console.Write("Количество зельи: " + userCounterPotions);
                                Console.SetCursorPosition(0, 24);
                                Console.Write("Количество уникальных предметов: " + userCounterRareItems);
                                Console.SetCursorPosition(0, 0);
                                for (int i = 0; i < map.GetLength(0); i++)
                                {
                                    for (int j = 0; j < map.GetLength(1); j++)
                                    {
                                        Console.Write(map[i, j]);
                                    }
                                    Console.WriteLine();
                                }
                                Console.SetCursorPosition(userY, userX);
                                Console.Write('@');
                                ConsoleKeyInfo charKey = Console.ReadKey();
                                switch (charKey.Key)
                                {
                                    case ConsoleKey.UpArrow:
                                        if (map[userX - 1, userY] != '#')
                                        {
                                            userX--;
                                        }
                                        break;
                                    case ConsoleKey.DownArrow:
                                        if (map[userX + 1, userY] != '#')
                                        {
                                            userX++;
                                        }
                                        break;
                                    case ConsoleKey.LeftArrow:
                                        if (map[userX, userY - 1] != '#')
                                        {
                                            userY--;
                                        }
                                        break;
                                    case ConsoleKey.RightArrow:
                                        if (map[userX, userY + 1] != '#')
                                        {
                                            userY++;
                                        }
                                        break;
                                }
                                if (map[userX, userY] == 'X')
                                {
                                    ++userMoney;
                                }
                                if (map[userX, userY] == 'X')
                                {
                                    map[userX, userY] = ' ';
                                    char[] tempBag = new char[bag.Length + 1];
                                    for (int i = 0; i < bag.Length; i++)
                                    {
                                        tempBag[i] = bag[i];
                                    }
                                    tempBag[tempBag.Length - 1] = 'X';
                                    bag = tempBag;
                                    collectedX++;
                                }
                                Console.Clear();
                                if (collectedX == 3)
                                {
                                    Console.Clear();
                                    TextColor("Поздравляю! Уровень пройден!", ConsoleColor.Green);
                                    isOpenFiveLevel = true;
                                    Console.ReadKey();
                                    Console.Clear();
                                    Game(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                                }
                            }
                        }
                        else
                        {
                            TextColor("Уровень не доступен, пройдите предыдущий.", ConsoleColor.Red);
                        }
                        break;
                    case 5:
                        Console.Clear();
                        Console.CursorVisible = false;
                        if (isOpenFiveLevel)
                        {
                            int collectedX = 0;
                            char[,] map =
                                {
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X','#'},
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                                };
                            int userX = 1, userY = 1;
                            char[] bag = new char[1];
                            while (true)
                            {
                                Console.SetCursorPosition(0, 20);
                                Console.Write("Сумка: ");
                                for (int i = 0; i < bag.Length; i++)
                                {
                                    Console.Write(bag[i] + " ");
                                }
                                Console.SetCursorPosition(0, 21);
                                Console.Write("Количество валюты: " + userMoney);
                                Console.SetCursorPosition(0, 22);
                                Console.Write("Количество предметов: " + userCounterItems);
                                Console.SetCursorPosition(0, 23);
                                Console.Write("Количество зельи: " + userCounterPotions);
                                Console.SetCursorPosition(0, 24);
                                Console.Write("Количество уникальных предметов: " + userCounterRareItems);
                                Console.SetCursorPosition(0, 0);
                                for (int i = 0; i < map.GetLength(0); i++)
                                {
                                    for (int j = 0; j < map.GetLength(1); j++)
                                    {
                                        Console.Write(map[i, j]);
                                    }
                                    Console.WriteLine();
                                }
                                Console.SetCursorPosition(userY, userX);
                                Console.Write('@');
                                ConsoleKeyInfo charKey = Console.ReadKey();
                                switch (charKey.Key)
                                {
                                    case ConsoleKey.UpArrow:
                                        if (map[userX - 1, userY] != '#')
                                        {
                                            userX--;
                                        }
                                        break;
                                    case ConsoleKey.DownArrow:
                                        if (map[userX + 1, userY] != '#')
                                        {
                                            userX++;
                                        }
                                        break;
                                    case ConsoleKey.LeftArrow:
                                        if (map[userX, userY - 1] != '#')
                                        {
                                            userY--;
                                        }
                                        break;
                                    case ConsoleKey.RightArrow:
                                        if (map[userX, userY + 1] != '#')
                                        {
                                            userY++;
                                        }
                                        break;
                                }
                                if (map[userX, userY] == 'X')
                                {
                                    ++userMoney;
                                }
                                if (map[userX, userY] == 'X')
                                {
                                    map[userX, userY] = ' ';
                                    char[] tempBag = new char[bag.Length + 1];
                                    for (int i = 0; i < bag.Length; i++)
                                    {
                                        tempBag[i] = bag[i];
                                    }
                                    tempBag[tempBag.Length - 1] = 'X';
                                    bag = tempBag;
                                    collectedX++;
                                }
                                Console.Clear();
                                if (collectedX == 3)
                                {
                                    Console.Clear();

                                    TextColor("Поздравляю! Уровень пройден!", ConsoleColor.Green);
                                    Console.ReadKey();
                                    Console.Clear();

                                    Game(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);

                                }
                            }
                        }
                        else
                        {
                            TextColor("Уровень не доступен, пройдите предыдущий.", ConsoleColor.Red);
                        }
                        break;
                    case 6:
                        Console.Clear();
                        MenuOfGame(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                        break;
                }
            }
        }
        static void Shop(ref bool isOpen, ref bool isOpenFirstLevel, ref bool isOpenSecondLevel, ref bool isOpenThirdLevel, ref bool isOpenFourthLevel, ref bool isOpenFiveLevel, ref int userMoney, ref int userCounterItems, ref int userCounterPotions, ref int userCounterRareItems)
        {
            Console.Clear();
            Console.WriteLine("1. Просмотр товаров.");
            Console.WriteLine("2. Купить.");
            Console.WriteLine("3. Назад.");
            Random counterItems = new Random();
            Random counterMoney = new Random();
            Random counterMoney2 = new Random();
            Random counterMoney3 = new Random();
            Random counterPotions = new Random();
            Random counterRareItems = new Random();
            while (isOpen)
            {
                switch (Convert.ToInt32(Console.ReadLine()))
                {
                    case 1:
                        Console.Clear();
                        Console.SetCursorPosition(15, 0);
                        Console.WriteLine("Магазин");
                        Console.SetCursorPosition(0, 1);
                        Console.WriteLine("У нас имеется: ");
                        Console.WriteLine($"Количество предметов: {counterItems.Next(5, 45)}, стоимость за одну: {counterMoney.Next(1, 10)}.");
                        Console.WriteLine($"Количество зелья: {counterPotions.Next(5, 45)}, стоимостью за одну: {counterMoney2.Next(1, 10)}.");
                        Console.WriteLine($"Количество уникальных предметов: {counterRareItems.Next(5, 45)}, стоимостью за одну: {counterMoney3.Next(1, 10)}.");
                        Console.ReadKey();
                        Shop(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                        break;
                    case 2:
                        Console.Clear();
                        Console.SetCursorPosition(1, 19);
                        Console.WriteLine("Вы можете выйти вписав слово Назад");
                        Console.SetCursorPosition(1, 17);
                        Console.Write("Ваши средства: " + userMoney);
                        Console.SetCursorPosition(15, 0);
                        Console.WriteLine("Магазин");
                        Console.SetCursorPosition(0, 1);
                        Console.WriteLine("У нас имеется: ");
                        Console.WriteLine($"Количество предметов: {counterItems.Next(5, 45)}, стоимость за одну: {counterMoney.Next(1, 10)}.");
                        Console.WriteLine($"Количество зелья: {counterPotions.Next(9, 96)}, стоимостью за одну: {counterMoney2.Next(6, 35)}.");
                        Console.WriteLine($"Количество уникальных предметов: {counterRareItems.Next(10, 45)}, стоимостью за одну: {counterMoney3.Next(10, 100)}.");
                        Console.Write("Напишите продукт который желаете купить: ");
                        int randomCounterItems = counterItems.Next(5, 45), randomCounterPotions = counterPotions.Next(9, 96), randomCounterRareItems = counterRareItems.Next(10, 45);
                        int randomCounterMoney = counterMoney.Next(1, 10), randomCounterMoney2 = counterMoney2.Next(6, 35), randomCounterMoney3 = counterMoney3.Next(10, 100);
                        while (isOpen)
                        {
                            switch (Console.ReadLine().ToLower())
                            {
                                case "предмет":
                                    Console.Write("Введите количество: ");
                                    int counterItem = Convert.ToInt32(Console.ReadLine());
                                    if (counterItem > randomCounterItems)
                                    {
                                        Console.WriteLine("Неверное количество!");
                                        Console.ReadKey();
                                        Shop(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                                    }
                                    else
                                    {
                                        if (randomCounterMoney * counterItem > userMoney)
                                        {
                                            Console.WriteLine("Не хватает денюжек!");
                                            Console.ReadLine();
                                            Shop(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                                        }
                                        else
                                        {
                                            Console.WriteLine("Удачная покупка!");
                                            userCounterItems += counterItem;
                                            userMoney -= randomCounterMoney * counterItem;
                                            Console.ReadKey();
                                            Shop(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);

                                        }
                                    }
                                    break;
                                case "зелье":
                                    Console.Write("Введите количество: ");
                                    int counterItem2 = Convert.ToInt32(Console.ReadLine());
                                    if (counterItem2 > randomCounterPotions)
                                    {
                                        Console.WriteLine("Неверное количество!");
                                        Console.ReadKey();
                                        Shop(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                                    }
                                    else
                                    {
                                        if (randomCounterMoney2 * counterItem2 > userMoney)
                                        {
                                            Console.WriteLine("Не хватает денюжек!");
                                            Console.ReadKey();
                                            Shop(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                                        }
                                        else
                                        {
                                            Console.WriteLine("Удачная покупка!");
                                            userCounterPotions += counterItem2;
                                            userMoney -= randomCounterMoney2 * counterItem2;
                                            Console.ReadKey();
                                            Shop(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);

                                        }
                                    }
                                    break;
                                case "уникальный предмет":
                                    Console.Write("Введите количество: ");
                                    int counterItem3 = Convert.ToInt32(Console.ReadLine());
                                    if (counterItem3 > randomCounterRareItems)
                                    {
                                        Console.WriteLine("Неверное количество!");
                                        Console.ReadKey();
                                        Shop(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                                    }
                                    else
                                    {
                                        if (randomCounterMoney3 * counterItem3 > userMoney)
                                        {
                                            Console.WriteLine("Не хватает денюжек!");
                                            Console.ReadKey();
                                            Shop(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                                        }
                                        else
                                        {
                                            Console.WriteLine("Удачная покупка!");
                                            userCounterRareItems += counterItem3;
                                            userMoney -= randomCounterMoney3 * counterItem3;
                                            Console.ReadKey();
                                            Shop(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);

                                        }
                                    }
                                    break;
                                case "назад":
                                    Console.Clear();
                                    Shop(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                                    break;
                            }
                        }
                        Console.Clear();
                        break;
                    case 3:
                        Console.Clear();
                        MenuOfGame(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                        break;
                    default:
                        Console.WriteLine("Такого пункта нету!");
                        break;
                }
            }
        }
        static void Inventory(ref bool isOpen, ref bool isOpenFirstLevel, ref bool isOpenSecondLevel, ref bool isOpenThirdLevel, ref bool isOpenFourthLevel, ref bool isOpenFiveLevel, ref int userMoney, ref int userCounterItems, ref int userCounterPotions, ref int userCounterRareItems)
        {
            Console.Clear();
            Console.SetCursorPosition(15, 0);
            Console.WriteLine("Инвентарь");
            Console.SetCursorPosition(0, 1);
            Console.WriteLine("У вас имеется: ");
            Console.WriteLine("Количество средств: " + userMoney);
            Console.WriteLine("Количество предметов: " + userCounterItems);
            Console.WriteLine("Количество зельи: " + userCounterPotions);
            Console.WriteLine("Количество уникальных предметов: " + userCounterRareItems);
            Console.WriteLine("Нажмите Enter, чтобы вернуться.");
            Console.ReadKey();
            MenuOfGame(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
        }
        static void MenuOfGame(ref bool isOpen, ref bool isOpenFirstLevel, ref bool isOpenSecondLevel, ref bool isOpenThirdLevel, ref bool isOpenFourthLevel, ref bool isOpenFiveLevel, ref int userMoney, ref int userCounterItems, ref int userCounterPotions, ref int userCounterRareItems)
        {
            Console.Clear();
            while (isOpen)
            {
                Console.WriteLine("1. Выбор уровня.");
                Console.WriteLine("2. Магазин.");
                Console.WriteLine("3. Инвентарь.");
                Console.WriteLine("4. Выход.");
                switch (Convert.ToInt32(Console.ReadLine()))
                {
                    case 1:
                        Console.Clear();
                        Game(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                        break;
                    case 2:
                        Console.Clear();
                        Shop(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                        break;
                    case 3:
                        Console.Clear();
                        Inventory(ref isOpen, ref isOpenFirstLevel, ref isOpenSecondLevel, ref isOpenThirdLevel, ref isOpenFourthLevel, ref isOpenFiveLevel, ref userMoney, ref userCounterItems, ref userCounterPotions, ref userCounterRareItems);
                        break;
                    case 4:
                        isOpen = false;
                        Console.Clear();
                        Process.GetCurrentProcess().Kill();
                        break;
                }
            }
        }
    }
}
